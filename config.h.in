/*
 * Copyright 2017, Intel Corporation
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in
 *       the documentation and/or other materials provided with the
 *       distribution.
 *
 *     * Neither the name of the copyright holder nor the names of its
 *       contributors may be used to endorse or promote products derived
 *       from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#ifndef SYSCALL_INTERCEPT_CONFIG_H
#define SYSCALL_INTERCEPT_CONFIG_H

#cmakedefine SYSCALL_INTERCEPT_ELF_H
#cmakedefine SYSCALL_INTERCEPT_GCC_PRAGMA_SYSH
#cmakedefine SYSCALL_INTERCEPT_GETAUXVAL
#cmakedefine SYSCALL_INTERCEPT_WITH_GLIBC
#cmakedefine SYSCALL_INTERCEPT_DLADDR
#cmakedefine SYSCALL_INTERCEPT_DL_ITERATE_PHDR
#cmakedefine SYSCALL_INTERCEPT_DYLD_GET_I_HEADER
#cmakedefine SYSCALL_INTERCEPT_NORETURN_KEYWORD
#cmakedefine SYSCALL_INTERCEPT_NORETURN_MACRO
#cmakedefine SYSCALL_INTERCEPT_NORETURN_ATTRIBUTE
#cmakedefine SYSCALL_INTERCEPT_FORMAT_ATTRIBUTE
#cmakedefine SYSCALL_INTERCEPT_BUILTIN_UNREACHABLE
#cmakedefine SYSCALL_INTERCEPT_WNO_WARN_DEPCRECATED
#cmakedefine SYSCALL_INTERCEPT_CLANG_DIAGNOSTIC_PRAGMA
#cmakedefine SYSCALL_INTERCEPT_GCC_DIAGNOSTIC_PRAGMA
#cmakedefine SYSCALL_INTERCEPT_PROC_FS_AVAILABLE
#cmakedefine SYSCALL_INTERCEPT_MACH_H
#cmakedefine SYSCALL_INTERCEPT_USE_SYSCALL_CLASSES

#ifndef noreturn
#ifdef SYSCALL_INTERCEPT_NORETURN_MACRO
#include <stdnoreturn.h>
#elif defined(SYSCALL_INTERCEPT_NORETURN_KEYWORD)
#define noreturn _Noreturn
#elif defined(SYSCALL_INTERCEPT_NORETURN_ATTRIBUTE)
#define noreturn __attribute__((noreturn))
#else
#define noreturn
#endif
#endif

noreturn static inline
void unreachable(void)
{
#ifdef SYSCALL_INTERCEPT_BUILTIN_UNREACHABLE
	__builtin_unreachable();
#endif
}

#ifdef SYSCALL_INTERCEPT_FORMAT_ATTRIBUTE
#define ATTR_FORMAT(...) __attribute__((format(__VA_ARGS__)))
#else
#define ATTR_FORMAT(...)
#endif

#define CMAKE_VERSION "@CMAKE_VERSION@"
#define CMAKE_C_COMPILER_ID "@CMAKE_C_COMPILER_ID@"
#define CMAKE_C_COMPILER_VERSION "@CMAKE_C_COMPILER_VERSION@"
#define CMAKE_C_FLAGS "@CMAKE_C_FLAGS@"
#define CMAKE_BUILD_TYPE "@CMAKE_BUILD_TYPE@"

#endif
